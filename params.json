{"name":"Doubanapicocoa-ios","tagline":"Douban api for cocoa, Very simple and easy to use. Support OS X Now.","body":"## 概要 ##\r\n\r\nDoubanAPICocoa是一个Cocoa封装的豆瓣API库，非官方版，可以使用于iOS，并支持iOS6及之后的版本。[OS X 版本可参考这里](https://github.com/GuoJing/DoubanAPICocoa-OSX)\r\n\r\nDoubanAPICocoa的底层支持并兼容老版本的[douban-objc-client](https://github.com/lincode/douban-objc-client)，熟悉[douban-objc-client](https://github.com/lincode/douban-objc-client)开发的同学也可以不用更新代码，直接移植到新的库里并且编译通过。但推荐使用DoubanAPICocoa提供的DOUEngine来实现代码。\r\n\r\n注意：示例请自行替换apiKey，并且自行申请相关权限，如豆邮和线上活动以及更多高级的功能。\r\n\r\n### 目的 ###\r\n\r\n1. 使开发更加容易，不用关注网络层的细节\r\n\r\n### 特点 ###\r\n\r\n1. 封装网络层\r\n2. 简单\r\n3. 使用闭包让开发者开发更简单\r\n3. All consts\r\n3. No Warning, No Error and No Build Analyze Errors\r\n\r\n### 样例 ###\r\n\r\n#### 验证 ####\r\n\r\n声明一个engine：\r\n\r\n    engine = [[DOUEngine alloc] initWithApiKey:kAPIKey withSecretKey:kPrivateKey withRedirUrl:kRedirectUrl];\r\n\r\n打开豆瓣验证url：\r\n\r\n    NSString *url_str = [self.engine getConnectUrl];\r\n\r\n从豆瓣返回code并初始化engine：\r\n\r\n    [self.engine didLoadWithCode:code];\r\n\r\n验证通过。\r\n\r\n#### 我是谁 ###\r\n\r\n    [u getWhoAmI:successUserBlock failedBlock:failBlock];\r\n\r\n#### 发广播 ####\r\n    \r\n    DOUBroadcastEngine *s = [self.engine getEngine:kDOUBroadcast];\r\n    [s say:self.shuo_field.title successBlock:successBlock failedBlock:failBlock];\r\n\r\n#### 获取同城活动 ####\r\n\r\n    DOUEventEngine *event_engine = [self.engine getEngine:kDOUEvent];\r\n    [event_engine getEventWithRemoteID:self.eid_field.title successBlock:successBlock failedBlock:failedBlock];\r\n\r\n### 变量 ###\r\n\r\n该库封装了常用的变量，比如发日记如果是发私有的日记，可以直接使用kDOUPrivacyPrivate，同样相册的排序方式可以使用kDOUOrderDesc，无需自己写变量。\r\n\r\n常用的变量文件在库的Engine/Utils里。\r\n\r\n1. DOUAPIConsts.h\r\n2. DOUAPIConsts.h\r\n3. DOUAPIErrorConsts.h\r\n\r\n### 开发 ###\r\n\r\n这个库支持最老的底层的实现方法，也可以非常容易的使用engine进行api开发，可以通过kDOU产品线获得相应的engine，每个engine都有getEngine方法。不过推荐在外面包装一个单例的共享engine，方便在代码各处使用。\r\n\r\n可以删除任意不需要的模块并重新打包和分发，减少代码。\r\n\r\n### 示例 ###\r\n\r\n大部分接口都有基本的示例，今后会提供更多更丰富的示例。\r\n\r\n## 其他 ##\r\n\r\n**[豆瓣API](http://developers.douban.com/)**\r\n\r\n**并且该版本不支持GData等V1版本特性，只支持V2。**\r\n\r\n如果你需要iOS版本，请去:\r\n\r\n1. 开发版：[douban-objc-client](https://github.com/lincode/douban-objc-client)\r\n2. 官方版：[douban-objc-client](https://github.com/douban/douban-objc-client)\r\n\r\n## 信息 ##\r\n\r\n当前版本V0.1.3，主要职责为兼容iOS版本并且封装网络层，今后使用的方法可能会不同。\r\n\r\n当前版本不支持GData等V1版本特性，只支持V2，所以必须使用https。\r\n\r\n当前版本只适用于64位版本，考虑到今后32位的Mac也不多，所以暂时不打算支持。\r\n\r\n## 使用 ##\r\n\r\n### Sample我还在做 ###\r\n\r\n### 发起一个异步请求 ###\r\n\r\n\tNSString *subPath = [NSString stringWithFormat:@\"/v2/event/%d\", event_id];\r\n\t\r\n\tDOUQuery *query = [[[DOUQuery alloc] initWithSubPath:subPath parameters:nil] autorelease];\r\n\r\n\tquery.apiBaseUrlString = service.apiBaseUrlString;\r\n\t\r\n\tDOUHttpRequest *req = [DOUHttpRequest requestWithQuery:query target:self];\r\n\r\n\tDOUService *service = [DOUService sharedInstance];\r\n\t[service addRequest:req];\r\n\r\n\r\n## 历史 ##\r\n\r\nv0.1\r\n\r\n1. 发布一个移植版本。","google":"42721249","note":"Don't delete this file! It's used internally to help with page regeneration."}